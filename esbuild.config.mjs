import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import fs from "fs";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
*/
`;

const prod = process.argv[2] === "production";

// Create two build contexts - one for JS and one for CSS
async function createBuilds() {
    // Main JS build
    const jsContext = await esbuild.context({
        banner: {
            js: banner,
        },
        entryPoints: ["src/main.ts"],
        bundle: true,
        external: [
            "obsidian",
            "electron",
            "@codemirror/autocomplete",
            "@codemirror/collab",
            "@codemirror/commands",
            "@codemirror/language",
            "@codemirror/lint",
            "@codemirror/search",
            "@codemirror/state",
            "@codemirror/view",
            "@lezer/common",
            "@lezer/highlight",
            "@lezer/lr",
            ...builtins,
        ],
        jsx: "automatic",
        jsxImportSource: "react",
        format: "cjs",
        target: "es2020",
        logLevel: "info",
        sourcemap: prod ? false : "inline",
        treeShaking: true,
        outfile: "main.js",
        minify: prod,
    });

    // CSS build
    const cssContext = await esbuild.context({
        entryPoints: ["src/styles/index.css"],
        bundle: true,
        outfile: "styles.css",
        logLevel: "info",
        minify: prod,
    });

    if (prod) {
        await Promise.all([jsContext.rebuild(), cssContext.rebuild()]);
        process.exit(0);
    } else {
        await Promise.all([jsContext.watch(), cssContext.watch()]);
    }
}

createBuilds().catch(() => process.exit(1));
